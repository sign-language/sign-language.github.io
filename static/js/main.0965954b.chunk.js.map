{"version":3,"sources":["configs/api.js","utils/apiCaller.js","utils/confirmer.js","constants/api.js","containers/components/Category/ListCategory/CategoryItem/CategoryItem.js","containers/components/Category/ListCategory/ListCategory.js","containers/components/Category/CategoryFormAdd/CategoryFormAdd.js","configs/domain.js","containers/pages/Category/Category.js","utils/toastify.js","containers/components/SubCategory/SubCategoryFormAdd/SubCategoryFormAdd.js","containers/components/SubCategory/ListSubCategory/SubCategoryItem/SubCategoryItem.js","containers/components/SubCategory/ListSubCategory/ListSubCategory.js","containers/pages/SubCategory/SubCategory.js","containers/components/Post/ListPost/PostItem/PostItem.js","containers/components/Post/ListPost/ListPost.js","containers/components/Post/PostFormAdd/PostFormAdd.js","containers/pages/Post/Post.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","callApi","endpoint","method","body","axios","url","Config","data","then","res","confirmDelete","Swal","fire","title","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","ENDPOINTS","CATEGORY","SUBCATEGORY","POST","UPLOAD","CategoryItem","props","onChange","e","setState","target","name","value","onEdit","editing","state","onUpdate","id","description","category","onUpdateCategory","onCancelUpdate","onDelete","result","response","CATEGPRY","console","log","this","index","className","readOnly","color","onClick","Component","ListCategory","fetchCategories","a","loading","categories","sources","colSpan","map","key","CategoryFormAdd","openForm","opened","onSave","preventDefault","placeholder","defaultValue","rows","DOMAIN","Category","href","options","autoClose","ToastSuccess","message","toast","success","ToastError","error","ToastWarning","warn","SubCategoryFormAdd","onChangeFile","file","files","uploadImage","formData","FormData","append","image","categoryId","required","accept","SubCategoryItem","onSaveUpdate","subcategory","onRefresh","delete","src","alt","disabled","ListSubCategory","fetchSubCategories","subcategories","SubCategory","PostItem","onChangeImage","imageFile","onChangeVideo","videoFile","uploadVideo","subCategoryId","keyword","video","post","width","controls","ListPost","fetchPosts","posts","PostFormAdd","subCategories","subCategory","Post","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0965954b.chunk.js","sourcesContent":["export const API_URL = \"http://signlanguage.somee.com/api\";","import * as Config from '../configs/api';\r\nimport axios from 'axios';\r\n\r\nexport default function callApi(endpoint, method = 'GET', body) {\r\n    return axios({\r\n        method: method,\r\n        url: `${Config.API_URL}/${endpoint}`,\r\n        data: body\r\n    }).then(res => {\r\n        return res.data\r\n    })\r\n};","import Swal from 'sweetalert2';\r\n\r\nexport const confirmDelete = () => {\r\n    return Swal.fire({\r\n        title: 'Delete this one?',\r\n        text: \"This action can not be canceled!\",\r\n        type: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete',\r\n        cancelButtonText: 'No, Cancel'\r\n    })\r\n}\r\n","export const ENDPOINTS = {\r\n    CATEGORY: \"categories\",\r\n    SUBCATEGORY: \"subcategories\",\r\n    POST: \"posts\",\r\n    UPLOAD: \"media/upload\"\r\n}","import React, { Component } from 'react'\r\nimport './CategoryItem.css'\r\nimport { confirmDelete } from '../../../../../utils/confirmer'\r\nimport callApi from '../../../../../utils/apiCaller'\r\nimport { ENDPOINTS } from '../../../../../constants/api'\r\n\r\nexport default class CategoryItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            description: '',\r\n            editing: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { id, name, description } = this.props.category;\r\n        this.setState({\r\n            id,\r\n            name,\r\n            description\r\n        })\r\n    }\r\n\r\n    // componentWillReceiveProps(nextProps) {\r\n    //     let { id, name, description } = nextProps.category;\r\n    //     this.setState({\r\n    //         id,\r\n    //         name,\r\n    //         description\r\n    //     })\r\n    // }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onEdit = () => {\r\n        this.setState({\r\n            editing: !this.state.editing\r\n        });\r\n    }\r\n\r\n    onUpdate = () => {\r\n        this.setState({\r\n            editing: false\r\n        });\r\n        let { id, name, description } = this.state;\r\n        if (this.props.category.name !== name || this.props.category.description !== description) {\r\n            this.props.onUpdateCategory({ id, name, description });\r\n        }\r\n    }\r\n\r\n    onCancelUpdate = () => {\r\n        this.setState({\r\n            editing: false\r\n        });\r\n        let { name, description } = this.props.category;\r\n        if (name !== this.state.name || description !== this.state.description) {\r\n            this.setState({\r\n                name,\r\n                description\r\n            });\r\n        }\r\n    }\r\n\r\n    onDelete = (id) => {\r\n        confirmDelete().then((result) => {\r\n            if (result.value) {\r\n                try {\r\n                    let response = callApi(`${ENDPOINTS.CATEGPRY}/${id}`, \"DELETE\", null)\r\n                    console.log(response);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { id, name, description, editing } = this.state;\r\n        return (\r\n            <tr>\r\n                <td>{this.props.index}</td>\r\n                <td>\r\n                    <input type=\"text\" name=\"name\" className={editing ? 'editing' : 'border-none'} onChange={this.onChange} value={name || ''} readOnly={editing ? false : true} />\r\n                </td>\r\n                <td>\r\n                    <input type=\"text\" name=\"description\" className={editing ? 'editing' : 'border-none'} onChange={this.onChange} value={description || ''} readOnly={editing ? false : true} />\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    {editing ?\r\n                        <span>\r\n                            <button color=\"success\" className=\"mr-10\" onClick={this.onUpdate}><i className=\"fa fa-floppy-o\"></i></button>\r\n                            <button color=\"secondary\" className=\"mr-10\" onClick={this.onCancelUpdate}><i className=\"fa fa-ban\"></i></button>\r\n                        </span> :\r\n                        <button color=\"warning\" className=\"mr-10\" onClick={this.onEdit}><i className=\"fa fa-pencil\"></i></button>\r\n                    }\r\n                    <button color=\"danger\" onClick={() => this.onDelete(id)}><i className=\"fa fa-trash-o\"></i></button> &nbsp;\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport callApi from '../../../../utils/apiCaller'\r\nimport CategoryItem from './CategoryItem/CategoryItem'\r\n\r\nexport default class ListCategory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            categories: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCategories()\r\n    }\r\n\r\n    fetchCategories = async () => {\r\n        try {\r\n            let response = await callApi(\"categories\", \"GET\", null);\r\n            this.setState({\r\n                loading: false,\r\n                categories: response.sources\r\n            })\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loading, categories } = this.state\r\n        return (\r\n            <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">Categories</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>DESCRIPTION</th>\r\n                                    <th>ACTIONS</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {loading ? <tr><td colSpan=\"4\">loading...</td></tr> : (\r\n                                    categories.map((category, index) => <CategoryItem key={index} index={index + 1} category={category} />)\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport callApi from '../../../../utils/apiCaller'\r\nimport { ENDPOINTS } from '../../../../constants/api'\r\n\r\nexport default class CategoryFormAdd extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\topened: false,\r\n\t\t\tname: '',\r\n\t\t\tdescription: ''\r\n\t\t}\r\n\t}\r\n\r\n\topenForm = () => {\r\n\t\tconst { opened } = this.state\r\n\t\tthis.setState({\r\n\t\t\topened: !opened\r\n\t\t})\r\n\t}\r\n\r\n\tonChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\tonSave = e => {\r\n\t\te.preventDefault()\r\n\t\tlet { name, description } = this.state\r\n\t\tlet data = {\r\n\t\t\tname,\r\n\t\t\tdescription\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlet response = callApi( ENDPOINTS.CATEGORY, \"POST\", data )\r\n\t\t\tconsole.log(response);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { opened, name, description } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"panel panel-default\">\r\n\t\t\t\t<div className=\"panel-heading\">\r\n\t\t\t\t\t<button onClick={this.openForm} className=\"btn btn-default\">ADD</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{opened ? <div className=\"panel-body\">\r\n\t\t\t\t\t<form>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Category Name\" name=\"name\" defaultValue={name} onChange={this.onChange} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<textarea className=\"form-control\" rows=\"3\" placeholder=\"Enter category description here\" name=\"description\" defaultValue={description} onChange={this.onChange} ></textarea>\r\n\r\n\t\t\t\t\t\t<button onClick={this.onSave} className=\"btn btn-primary\">SUBMIT</button>\r\n\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div> : ''}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","export const DOMAIN = 'http://sign-language.github.io'\r\n// export const DOMAIN = 'http://localhost:3000'","import React, { Component } from 'react'\r\nimport ListCategory from '../../components/Category/ListCategory/ListCategory'\r\nimport CategoryFormAdd from '../../components/Category/CategoryFormAdd/CategoryFormAdd'\r\nimport { DOMAIN } from '../../../configs/domain'\r\n\r\nexport default class Category extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <a href={DOMAIN + '/'}>POSTS</a><br />\r\n                <a href={DOMAIN + '/subcategories'}>SUBCATEGORIES</a>\r\n                <CategoryFormAdd />\r\n                <ListCategory />\r\n            </>\r\n        )\r\n    }\r\n}","import { toast } from 'react-toastify';\r\n\r\nconst options = {\r\n    autoClose: 3000\r\n};\r\n\r\nexport const ToastSuccess = (message) => {\r\n    toast.success(message, options)\r\n}\r\n\r\nexport const ToastError = (message) => {\r\n    toast.error(message, options)\r\n}\r\n\r\nexport const ToastWarning = (message) => {\r\n    toast.warn(message, options)\r\n}","import React, { Component } from 'react'\r\nimport callApi from '../../../../utils/apiCaller'\r\nimport { ENDPOINTS } from '../../../../constants/api'\r\nimport { ToastError, ToastSuccess } from '../../../../utils/toastify'\r\n\r\nexport default class SubCategoryFormAdd extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\topened: false,\r\n\t\t\tcategoryId: '',\r\n\t\t\tname: '',\r\n\t\t\timage: '',\r\n\t\t\tcategories: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchCategories()\r\n\t}\r\n\r\n\tfetchCategories = async () => {\r\n\t\ttry {\r\n\t\t\tlet response = await callApi(ENDPOINTS.CATEGORY, \"GET\", null);\r\n\t\t\tthis.setState({\r\n\t\t\t\tcategories: response.sources\r\n\t\t\t})\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\topenForm = () => {\r\n\t\tconst { opened } = this.state\r\n\t\tthis.setState({\r\n\t\t\topened: !opened\r\n\t\t})\r\n\t}\r\n\r\n\tonChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\tonChangeFile = e => {\r\n\t\tlet file = e.target.files[0]\r\n\t\tthis.setState({ ...this.state, file })\r\n\t}\r\n\r\n\tuploadImage = async () => {\r\n\t\tconst { file } = this.state;\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('file', file)\r\n\t\tformData.append('folder', 'subcategories');\r\n\t\treturn await callApi(ENDPOINTS.UPLOAD, 'POST', formData)\r\n\t}\r\n\r\n\tonSave = async e => {\r\n\t\te.preventDefault()\r\n\t\tlet image = await this.uploadImage()\r\n\t\tlet { categoryId, name, categories } = this.state\r\n\t\tif (!categoryId) {\r\n\t\t\tcategoryId = categories[0].id\r\n\t\t}\r\n\t\tlet data = {\r\n\t\t\tcategoryId,\r\n\t\t\tname,\r\n\t\t\timage\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tawait callApi(ENDPOINTS.SUBCATEGORY, \"POST\", data)\r\n\t\t\tToastSuccess('Thêm thành công!')\r\n\t\t\tlet { opened } = this.state\r\n\t\t\tthis.setState({\r\n\t\t\t\topened: !opened,\r\n\t\t\t\tcategoryId: '',\r\n\t\t\t\tname: '',\r\n\t\t\t\timage: '',\r\n\t\t\t})\r\n\t\t} catch (e) {\r\n\t\t\tToastError(e.response.data)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { opened, name, categories } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"panel panel-default\">\r\n\t\t\t\t<div className=\"panel-heading\">\r\n\t\t\t\t\t<button onClick={this.openForm} className=\"btn btn-default\">ADD</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{opened ? <div className=\"panel-body\">\r\n\t\t\t\t\t<form>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Subcategory Name\" name=\"name\" defaultValue={name} onChange={this.onChange} required />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<select name=\"categoryId\" className=\"form-control\" required=\"required\" onChange={this.onChange} >\r\n\t\t\t\t\t\t\t{categories.map((category, index) => <option key={index} value={category.id}>{category.name}</option>)}\r\n\t\t\t\t\t\t</select>\r\n\r\n\t\t\t\t\t\t<input type=\"file\" accept=\"image/*\" className=\"form-control\" onChange={this.onChangeFile} />\r\n\r\n\t\t\t\t\t\t<button onClick={this.onSave} className=\"btn btn-primary\">SUBMIT</button>\r\n\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div> : ''}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react'\r\nimport './SubCategoryItem.css'\r\nimport { confirmDelete } from '../../../../../utils/confirmer'\r\nimport callApi from '../../../../../utils/apiCaller'\r\nimport { ENDPOINTS } from '../../../../../constants/api'\r\nimport { ToastSuccess, ToastError } from '../../../../../utils/toastify'\r\n\r\nexport default class SubCategoryItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categoryId: '',\r\n            id: '',\r\n            name: '',\r\n            image: '',\r\n            file: null,\r\n            editing: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { categoryId, id, name, image } = this.props.subcategory;\r\n        this.setState({\r\n            categoryId,\r\n            id,\r\n            name,\r\n            image\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeFile = e => {\r\n        let file = e.target.files[0]\r\n        this.setState({ ...this.state, file })\r\n    }\r\n\r\n    uploadImage = async () => {\r\n        const { file } = this.state;\r\n        const formData = new FormData();\r\n        formData.append('file', file)\r\n        formData.append('folder', 'subcategories');\r\n        return await callApi(ENDPOINTS.UPLOAD, 'POST', formData)\r\n    }\r\n\r\n    onEdit = () => {\r\n        this.setState({\r\n            editing: !this.state.editing\r\n        });\r\n    }\r\n\r\n    onSaveUpdate = async e => {\r\n        this.setState({\r\n            editing: false\r\n        });\r\n        let { categoryId, id, name, image, file } = this.state;\r\n        if (this.props.subcategory.name !== name || this.props.subcategory.image !== image || file) {\r\n            let image = await this.uploadImage()\r\n            let data = {\r\n                categoryId,\r\n                name,\r\n                image\r\n            }\r\n            try {\r\n                await callApi(`${ENDPOINTS.SUBCATEGORY}/${id}`, \"PUT\", data)\r\n                ToastSuccess('Cập nhật thành công!')\r\n                this.props.onRefresh()\r\n            } catch (e) {\r\n                ToastError(e.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    onCancelUpdate = () => {\r\n        this.setState({\r\n            editing: false\r\n        });\r\n        let { name, image } = this.props.subcategory;\r\n        if (name !== this.state.name || image !== this.state.image) {\r\n            this.setState({\r\n                name,\r\n                image\r\n            });\r\n        }\r\n    }\r\n\r\n    onDelete = id => {\r\n        confirmDelete().then((result) => {\r\n            if (result.value) {\r\n                this.delete(id)\r\n            }\r\n        })\r\n    }\r\n\r\n    delete = async id => {\r\n        try {\r\n            await callApi(`${ENDPOINTS.SUBCATEGORY}/${id}`, \"DELETE\", null)\r\n            ToastSuccess('Xóa thành công!')\r\n            this.props.onRefresh()\r\n        } catch (e) {\r\n            console.log(e);\r\n            ToastError(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id, name, image, editing } = this.state;\r\n        return (\r\n            <tr>\r\n                <td>{this.props.index}</td>\r\n                <td>\r\n                    <input type=\"text\" name=\"name\" className={editing ? 'editing' : 'border-none'} onChange={this.onChange} value={name || ''} readOnly={editing ? false : true} />\r\n                </td>\r\n                <td>\r\n                    {(image && !editing) ? <img src={image} alt={name} /> : <input type=\"file\" accept=\"image/*\" className={editing ? 'editing' : 'border-none'} onChange={this.onChangeFile} disabled={editing ? false : true} />}\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    {editing ?\r\n                        <span>\r\n                            <button color=\"success\" className=\"mr-10\" onClick={this.onSaveUpdate}><i className=\"fa fa-floppy-o\"></i></button>\r\n                            <button color=\"secondary\" className=\"mr-10\" onClick={this.onCancelUpdate}><i className=\"fa fa-ban\"></i></button>\r\n                        </span> :\r\n                        <button color=\"warning\" className=\"mr-10\" onClick={this.onEdit}><i className=\"fa fa-pencil\"></i></button>\r\n                    }\r\n                    <button color=\"danger\" onClick={() => this.onDelete(id)}><i className=\"fa fa-trash-o\"></i></button> &nbsp;\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport callApi from '../../../../utils/apiCaller'\r\nimport { ENDPOINTS } from '../../../../constants/api'\r\nimport SubCategoryItem from './SubCategoryItem/SubCategoryItem'\r\n\r\nexport default class ListSubCategory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            subcategories: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchSubCategories()\r\n    }\r\n\r\n    fetchSubCategories = async () => {\r\n        try {\r\n            let response = await callApi(ENDPOINTS.SUBCATEGORY, \"GET\", null);\r\n            this.setState({\r\n                loading: false,\r\n                subcategories: response.sources\r\n            })\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loading, subcategories } = this.state\r\n        return (\r\n            <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">Categories</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>IMAGE</th>\r\n                                    <th>ACTIONS</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {loading ? <tr><td colSpan=\"4\">loading...</td></tr> : (\r\n                                    subcategories.map((subcategory, index) => <SubCategoryItem key={index} index={index + 1} subcategory={subcategory} onRefresh={this.fetchSubCategories} />)\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport SubCategoryFormAdd from '../../components/SubCategory/SubCategoryFormAdd/SubCategoryFormAdd'\r\nimport ListSubCategory from '../../components/SubCategory/ListSubCategory/ListSubCategory'\r\nimport { DOMAIN } from '../../../configs/domain'\r\n\r\nexport default class SubCategory extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <a href={DOMAIN + '/'}>POSTS</a><br />\r\n                <a href={DOMAIN + '/categories'}>CATEGORIES</a>\r\n                <SubCategoryFormAdd />\r\n                <ListSubCategory />\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './PostItem.css'\r\nimport { confirmDelete } from '../../../../../utils/confirmer'\r\nimport callApi from '../../../../../utils/apiCaller'\r\nimport { ENDPOINTS } from '../../../../../constants/api'\r\nimport { ToastSuccess, ToastError, ToastWarning } from '../../../../../utils/toastify'\r\n\r\nexport default class PostItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subCategoryId: '',\r\n            id: '',\r\n            keyword: '',\r\n            image: '',\r\n            video: '',\r\n            imageFile: null,\r\n            videoFile: null,\r\n            editing: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { subCategoryId, id, keyword, image, video } = this.props.post;\r\n        this.setState({\r\n            subCategoryId,\r\n            id,\r\n            keyword,\r\n            image,\r\n            video\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeImage = e => {\r\n        let imageFile = e.target.files[0]\r\n        this.setState({ imageFile })\r\n    }\r\n\r\n    onChangeVideo = e => {\r\n        let videoFile = e.target.files[0]\r\n        this.setState({ videoFile })\r\n    }\r\n\r\n    uploadImage = async () => {\r\n\t\tconsole.log(\"Uploading image\");\r\n\t\tconst { imageFile } = this.state;\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('file', imageFile)\r\n\t\tformData.append('folder', 'posts');\r\n\t\treturn await callApi(ENDPOINTS.UPLOAD, 'POST', formData)\r\n\t}\r\n\r\n\tuploadVideo = async () => {\r\n\t\tconsole.log(\"Uploading video\");\r\n\t\tconst { videoFile } = this.state;\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('file', videoFile)\r\n\t\tformData.append('folder', 'posts');\r\n\t\treturn await callApi(ENDPOINTS.UPLOAD, 'POST', formData)\r\n\t}\r\n\r\n    onEdit = () => {\r\n        this.setState({\r\n            editing: !this.state.editing\r\n        });\r\n    }\r\n\r\n    onSaveUpdate = async e => {\r\n        this.setState({\r\n            editing: false\r\n        });\r\n        let { subCategoryId, id, keyword, image, video, imageFile, videoFile } = this.state;\r\n        if (this.props.post.keyword !== keyword || imageFile || videoFile) {\r\n            if (imageFile) {\r\n                ToastWarning(\"Đang tải lên hình ảnh, vui lòng đợi trong giây lát!\")\r\n                image = await this.uploadImage()\r\n            }\r\n            if (videoFile) {\r\n                ToastWarning(\"Đang tải lên video, vui lòng đợi trong giây lát!\")\r\n                video = await this.uploadVideo()\r\n            }\r\n            let data = {\r\n                subCategoryId,\r\n                keyword,\r\n                image,\r\n                video\r\n            }\r\n            console.log(data);\r\n            try {\r\n                await callApi(`${ENDPOINTS.POST}/${id}`, \"PUT\", data)\r\n                ToastSuccess('Cập nhật thành công!')\r\n                this.props.onRefresh()\r\n            } catch (e) {\r\n                ToastError(e.response.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    onCancelUpdate = () => {\r\n        this.setState({\r\n            editing: false\r\n        });\r\n        let { keyword, imageFile, videoFile } = this.props.post;\r\n        if (keyword !== this.state.name || imageFile || videoFile) {\r\n            this.setState({\r\n                keyword\r\n            });\r\n        }\r\n    }\r\n\r\n    onDelete = id => {\r\n        confirmDelete().then((result) => {\r\n            if (result.value) {\r\n                this.delete(id)\r\n            }\r\n        })\r\n    }\r\n\r\n    delete = async id => {\r\n        try {\r\n            await callApi(`${ENDPOINTS.POST}/${id}`, \"DELETE\", null)\r\n            ToastSuccess('Xóa thành công!')\r\n            this.props.onRefresh()\r\n        } catch (e) {\r\n            console.log(e);\r\n            ToastError(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id, keyword, image, video, editing } = this.state;\r\n        return (\r\n            <tr>\r\n                <td>{this.props.index}</td>\r\n                <td>\r\n                    <input type=\"text\" name=\"keyword\" className={editing ? 'editing' : 'border-none'} onChange={this.onChange} value={keyword || ''} readOnly={editing ? false : true} />\r\n                </td>\r\n                <td>\r\n                    {(image && !editing) ? <img src={image} alt={keyword} /> : <input type=\"file\" accept=\"image/*\" className={editing ? 'editing' : 'border-none'} onChange={this.onChangeImage} disabled={editing ? false : true} />}\r\n                </td>\r\n                <td>\r\n                    {(video && !editing) ?\r\n                        <video width=\"400\" controls>\r\n                            <source src={video} type=\"video/mp4\" />\r\n                        </video>\r\n                        : <input type=\"file\" accept=\"video/*\" className={editing ? 'editing' : 'border-none'} onChange={this.onChangeVideo} disabled={editing ? false : true} />}\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    {editing ?\r\n                        <span>\r\n                            <button color=\"success\" className=\"mr-10\" onClick={this.onSaveUpdate}><i className=\"fa fa-floppy-o\"></i></button>\r\n                            <button color=\"secondary\" className=\"mr-10\" onClick={this.onCancelUpdate}><i className=\"fa fa-ban\"></i></button>\r\n                        </span> :\r\n                        <button color=\"warning\" className=\"mr-10\" onClick={this.onEdit}><i className=\"fa fa-pencil\"></i></button>\r\n                    }\r\n                    <button color=\"danger\" onClick={() => this.onDelete(id)}><i className=\"fa fa-trash-o\"></i></button> &nbsp;\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport callApi from '../../../../utils/apiCaller'\r\nimport { ENDPOINTS } from '../../../../constants/api'\r\nimport PostItem from './PostItem/PostItem'\r\n\r\nexport default class ListPost extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            posts: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchPosts()\r\n    }\r\n\r\n    fetchPosts = async () => {\r\n        try {\r\n            let response = await callApi(ENDPOINTS.POST, \"GET\", null);\r\n            this.setState({\r\n                loading: false,\r\n                posts: response.sources\r\n            })\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loading, posts } = this.state\r\n        return (\r\n            <div className=\"panel panel-default\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">POSTS</h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>KEYWORD</th>\r\n                                    <th>IMAGE</th>\r\n                                    <th>VIDEO</th>\r\n                                    <th>ACTIONS</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {loading ? <tr><td colSpan=\"4\">loading...</td></tr> : (\r\n                                    posts.map((post, index) => <PostItem key={index} index={index + 1} post={post} onRefresh={this.fetchPosts} />)\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport callApi from '../../../../utils/apiCaller'\r\nimport { ENDPOINTS } from '../../../../constants/api'\r\nimport { ToastError, ToastSuccess, ToastWarning } from '../../../../utils/toastify'\r\n\r\nexport default class PostFormAdd extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\topened: false,\r\n\t\t\tsubCategoryId: '',\r\n\t\t\tkeyword: '',\r\n\t\t\timage: '',\r\n\t\t\tvideo: '',\r\n\t\t\timageFile: null,\r\n\t\t\tvideoFile: null,\r\n\t\t\tsubCategories: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchSubCategories()\r\n\t}\r\n\r\n\tfetchSubCategories = async () => {\r\n\t\ttry {\r\n\t\t\tlet response = await callApi(ENDPOINTS.SUBCATEGORY, \"GET\", null);\r\n\t\t\tthis.setState({\r\n\t\t\t\tsubCategories: response.sources\r\n\t\t\t})\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\topenForm = () => {\r\n\t\tconst { opened } = this.state\r\n\t\tthis.setState({\r\n\t\t\topened: !opened\r\n\t\t})\r\n\t}\r\n\r\n\tonChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\tonChangeImage = e => {\r\n\t\tlet imageFile = e.target.files[0]\r\n\t\tthis.setState({\r\n\t\t\timageFile\r\n\t\t})\r\n\t}\r\n\r\n\tonChangeVideo = e => {\r\n\t\tlet videoFile = e.target.files[0]\r\n\t\tthis.setState({\r\n\t\t\tvideoFile\r\n\t\t})\r\n\t}\r\n\r\n\tuploadImage = async () => {\r\n\t\tconst { imageFile } = this.state;\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('file', imageFile)\r\n\t\tformData.append('folder', 'posts');\r\n\t\treturn await callApi(ENDPOINTS.UPLOAD, 'POST', formData)\r\n\t}\r\n\r\n\tuploadVideo = async () => {\r\n\t\tconst { videoFile } = this.state;\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('file', videoFile)\r\n\t\tformData.append('folder', 'posts');\r\n\t\treturn await callApi(ENDPOINTS.UPLOAD, 'POST', formData)\r\n\t}\r\n\r\n\tonSave = async e => {\r\n\t\te.preventDefault()\r\n\t\tlet { subCategoryId, keyword, image, video, imageFile, videoFile, subCategories } = this.state\r\n\t\tif (!subCategoryId) {\r\n\t\t\tsubCategoryId = subCategories[0].id\r\n\t\t}\r\n\t\tif (imageFile) {\r\n\t\t\tToastWarning(\"Đang tải lên hình ảnh, vui lòng đợi trong giây lát!\")\r\n\t\t\timage = await this.uploadImage()\r\n\t\t}\r\n\t\tif (videoFile) {\r\n\t\t\tToastWarning(\"Đang tải lên video, vui lòng đợi trong giây lát!\")\r\n\t\t\tvideo = await this.uploadVideo()\r\n\t\t}\r\n\t\tlet data = {\r\n\t\t\tsubCategoryId,\r\n\t\t\tkeyword,\r\n\t\t\timage,\r\n\t\t\tvideo\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tawait callApi(ENDPOINTS.POST, \"POST\", data)\r\n\t\t\tToastSuccess('Thêm thành công!')\r\n\t\t\tlet { opened } = this.state\r\n\t\t\tthis.setState({\r\n\t\t\t\topened: !opened,\r\n\t\t\t\tsubCategoryId: '',\r\n\t\t\t\tkeyword: '',\r\n\t\t\t\timage: '',\r\n\t\t\t\tvideo: '',\r\n\t\t\t\timageFile: null,\r\n\t\t\t\tvideoFile: null\r\n\t\t\t})\r\n\t\t} catch (e) {\r\n\t\t\tToastError(e.response.data)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { opened, keyword, subCategories } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"panel panel-default\">\r\n\t\t\t\t<div className=\"panel-heading\">\r\n\t\t\t\t\t<button onClick={this.openForm} className=\"btn btn-default\">ADD</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{opened ? <div className=\"panel-body\">\r\n\t\t\t\t\t<form>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Keyword\" name=\"keyword\" defaultValue={keyword} onChange={this.onChange} required />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<select name=\"subCategoryId\" className=\"form-control\" required=\"required\" onChange={this.onChange} >\r\n\t\t\t\t\t\t\t{subCategories.map((subCategory, index) => <option key={index} value={subCategory.id}>{subCategory.name}</option>)}\r\n\t\t\t\t\t\t</select>\r\n\r\n\t\t\t\t\t\t<input type=\"file\" accept=\"image/*\" className=\"form-control\" onChange={this.onChangeImage} />\r\n\r\n\t\t\t\t\t\t<input type=\"file\" accept=\"video/*\" className=\"form-control\" onChange={this.onChangeVideo} />\r\n\r\n\t\t\t\t\t\t<button onClick={this.onSave} className=\"btn btn-primary\">SUBMIT</button>\r\n\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div> : ''}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react'\r\nimport ListPost from '../../components/Post/ListPost/ListPost'\r\nimport { DOMAIN } from '../../../configs/domain'\r\nimport PostFormAdd from '../../components/Post/PostFormAdd/PostFormAdd'\r\n\r\nexport default class Post extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <a href={DOMAIN + '/categories'}>CATEGORIES</a><br />\r\n                <a href={DOMAIN + '/subcategories'}>SUBCATEGORIES</a>\r\n                <PostFormAdd />\r\n                <ListPost />\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Category from './containers/pages/Category/Category';\r\nimport SubCategory from './containers/pages/SubCategory/SubCategory';\r\nimport Post from './containers/pages/Post/Post';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/categories\" name=\"Category Page\" component={Category} />\r\n          <Route exact path=\"/subcategories\" name=\"SubCategory Page\" component={SubCategory} />\r\n          <Route exact path=\"\" name=\"Home\" component={Post} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}